背景：
首先非常感谢情大能创建这么一个平台，让我们不仅能够学到新的知识，还能有把知识传递出去的机会。
先剖析下自己，我学习前端从了解到开始深入学习现在还不超过三个月，简直就是一个菜鸟中的菜鸟，所以当初接下angular 2时有点“狂妄自大”，
因为我现在的功底知识稍微了解练习下angular 1而已。现在看来确实有点自不量力啊，哈哈，但是我还是不会轻易放弃的，虽然angular 1了解不深，
但好像并不影响angular 2 的学习。当然，这一点的认识是从别人的文档里看来的。而我有另外一种想法，也不知道对不对，
我觉得学习技术就得“活在未来”，angular 2虽然不确定以后是否会不会火，但随着技术的潮流学习它肯定是必然的。因为这段时间再做综合的项目，时间比较紧，
消化这本书的时间也就不是很多了。这里我就总结下angular 2第一章的一些信息和概念的总结：

1、angular 1和angular 2是否兼容？确实不怎么向下兼容，如果以前的功能都是用1来实现的，这确实听起来就是个噩梦，但作者给的理由我也感觉有点无奈，
给了一句给自己鼓励也算是给学习者鼓励的话，如果想构建高性能、可扩展的单页应用方面，angular 2有显而易见的优势。

2、对于Web Component概念的理解：看完三遍后感觉还是一脸懵逼，唯一理解的就是感觉就行H5一样，或者angular 1中那样我们可以自定义标签，这样有什么好处呢，
例如能够更好的封装性、提供的标签具有更好的语义、更好的模块化，并且能让开发人员和设计师之间的交更加流畅。

3、对于webworker的理解：我们知道javascript程序运行是在单个线程里面，就像我们去政府办事一样，你得排队，所以可想而知办事的效率肯定不高，
客户体验肯定就不好。Webworker允许在另一个线程里面执行计算密集型任务，从而解放主线程，让它可以处理用户输入并渲染用户界面。
然后angular 1是怎样使用webworker呢?我们知道每绑定一块数据都会添加一个新的监视器，一旦digest循环开始运行，它就需要遍历所有监视器，
执行与之相关的表达，并把返回的结果与上一次遍历所获得结果做比较。这样会存在一个什么问题呢？
1）遍历大量的监视器
2）在指定的上下文中执行表达式
3）复制返回值
4）把当前表达式的运算结果与上一次相比较
毋庸置疑，运行的越多，效率就会越低。至于angular 2是怎么做的，尽然没有讲到，我也是醉了，作者意图明显吗，想知道的，你得接着学下去。

那么angular 2是怎么设计的呢？Angular 2采用单向数据流设计，原理没有讲，优点就有如下几点：
1）更明确的数据流
2）不同的数据绑定之间没有依赖关系，所以digest没有存活时间（TTL）的概念
3）性能更好

自己能够理解的就只有这么多了，其他的一些概念看起来一脸懵逼，完全晕脑壳了，先这样，再接再厉吧。

